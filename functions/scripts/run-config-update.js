#!/usr/bin/env node

const { updateTempoRealConfig, syncDataFromCollections } = require('./updateTempoRealConfig');
const { seedConfigData, updateExistingConfig } = require('./seedConfigData');

/**
 * Script de execu√ß√£o para atualizar configura√ß√£o do tempo_real
 * Permite escolher entre diferentes op√ß√µes
 */
async function main() {
  const args = process.argv.slice(2);
  const command = args[0] || 'help';

  console.log('üöÄ Script de Atualiza√ß√£o da Configura√ß√£o Tempo Real');
  console.log('==================================================\n');

  try {
    switch (command) {
      case 'update':
        console.log('üîÑ Executando atualiza√ß√£o completa...');
        await updateTempoRealConfig();
        await syncDataFromCollections();
        console.log('‚úÖ Atualiza√ß√£o completa conclu√≠da!');
        break;

      case 'seed':
        console.log('üå± Executando seed inicial...');
        await seedConfigData();
        await syncDataFromCollections();
        console.log('‚úÖ Seed inicial conclu√≠do!');
        break;

      case 'sync':
        console.log('üîÑ Sincronizando dados das cole√ß√µes...');
        await syncDataFromCollections();
        console.log('‚úÖ Sincroniza√ß√£o conclu√≠da!');
        break;

      case 'update-existing':
        console.log('üîÑ Atualizando configura√ß√£o existente...');
        await updateExistingConfig();
        await syncDataFromCollections();
        console.log('‚úÖ Atualiza√ß√£o de configura√ß√£o existente conclu√≠da!');
        break;

      case 'help':
      default:
        console.log('üìñ Comandos dispon√≠veis:');
        console.log('');
        console.log('  update          - Atualiza√ß√£o completa (recomendado)');
        console.log('  seed            - Seed inicial (se n√£o existir)');
        console.log('  sync            - Apenas sincronizar dados das cole√ß√µes');
        console.log('  update-existing - Atualizar configura√ß√£o existente');
        console.log('  help            - Mostrar esta ajuda');
        console.log('');
        console.log('üìù Exemplos:');
        console.log('  node run-config-update.js update');
        console.log('  node run-config-update.js seed');
        console.log('  node run-config-update.js sync');
        console.log('');
        console.log('üéØ Recomenda√ß√£o: Use "update" para a primeira execu√ß√£o');
        break;
    }
  } catch (error) {
    console.error('üí• Erro durante a execu√ß√£o:', error);
    process.exit(1);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main();
}

module.exports = { main }; 